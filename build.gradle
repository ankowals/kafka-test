plugins {
    id 'java'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.6.0"
}

group 'com.github.ankowals'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {
    implementation platform('io.micronaut:micronaut-bom:3.7.4')
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.kafka:micronaut-kafka"

    annotationProcessor platform('io.micronaut:micronaut-bom:3.7.4')
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    runtimeOnly 'ch.qos.logback:logback-classic:1.4.5'

    implementation 'org.apache.avro:avro:1.11.1'

    implementation 'io.confluent:kafka-avro-serializer:7.3.1'
    implementation 'io.confluent:kafka-streams-avro-serde:7.3.1'

    testImplementation platform('io.micronaut:micronaut-bom:3.7.4')
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter"

    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.1'

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:3.7.4")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform('org.testcontainers:testcontainers-bom:1.17.6')
    testImplementation "org.testcontainers:kafka"

    testImplementation "org.assertj:assertj-core:3.23.1"
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.36.1'

    testImplementation 'org.awaitility:awaitility:4.2.0'

    testImplementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.14.2'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor "org.projectlombok:lombok:1.18.26"
    testAnnotationProcessor("org.projectlombok:lombok:1.18.26")
}

test {
    useJUnitPlatform()
}

avro {
    stringType = "CharSequence"
    fieldVisibility = "private"
    customConversion org.apache.avro.Conversions.UUIDConversion
}